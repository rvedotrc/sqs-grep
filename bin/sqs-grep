#!/usr/bin/env ruby

require 'optparse'

require 'sqs-grep'

config = SqsGrep::Config.new

opts_parser = OptionParser.new do |opts|
  opts.banner = "Usage: sqs-grep [OPTIONS] PATTERN QUEUE"
  opts.separator ""
  opts.on("-s", "--send-to OTHER_QUEUE", "Send matched messages to another queue (same account and region)") do |q|
    config.send_to = q
  end
  opts.on("-l", "--invoke-lambda FUNCTION_NAME", "Invoke a lambda with the contents of each message (same account and region)") do |l|
    config.invoke_lambda = l
  end
  opts.on("-d", "--delete", "Consume (delete) matched messages") do
    config.delete_matched = true
  end
  opts.on("-v", "--invert-match", "Invert the matching logic") do
    config.invert_match = true
  end
  opts.on("-m", "--max-count N", "Stop after N matches") do |n|
    config.max_count = n.to_i
  end
  opts.on("-t", "--visibility-timeout N", "Set the visibility timeout (default: #{config.visibility_timeout})") do |n|
    config.visibility_timeout = n.to_i
  end
  opts.on("-w", "--wait-time-seconds N", "Give up after this many seconds of no new messages (default: #{config.wait_time_seconds})") do |n|
    config.wait_time_seconds = n.to_i
  end
  opts.on("-j", "--json", "Show output in json format") do
    config.json_format = true
  end
  opts.separator ""
  opts.separator <<-EOF
Examples. (Note the use of the pattern "^" to match all messages).

  # Show all messages, delete nothing:
  sqs-grep ^ name-of-queue

  # Show only messages matching the given pattern, without deleting them:
  sqs-grep "[Ee]xception.*at line" name-of-queue

  # Show and consume (delete) all messages (somewhat like sqs-receive):
  sqs-grep --delete ^ name-of-queue

  # Show and consume (delete) only messages matching matching some pattern:
  sqs-grep --delete 1caf7fdb-e47a-46af-b8e3-4d955883a396 name-of-queue

  EOF
end

opts_parser.parse!

if ARGV.count != 2
  $stderr.puts opts_parser.help
  exit 2
end

(config.pattern, config.queue_name) = ARGV
config.validate

rc = SqsGrep::Runner.new(config).run
exit rc

# eof sqs-grep
